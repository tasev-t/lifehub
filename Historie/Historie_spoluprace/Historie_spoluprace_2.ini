# LifeHub – Historie spolupráce a vývoje projektu

## 1. Úfvod

Projekt **LifeHub** vznikl jako osobní životní asistent v podobě modulární webové aplikace, která bude pomáhat uživateli spravovat různé oblasti života (strava, finance, majetek, zvířata aj.).

Každý modul funguje jako samostatná aplikace v architektuře Django, propojená pomocí REST API. Dokument si klade za cíl zachytit klíčové kroky vývoje, problémy a jejich řešení, aby byl projekt transparentní, udržitelný a srozumitelný pro další vývojáře.

---

## 2. Cíl projektu a postup spolupráce

### Hlavní milníky:
- Založení Django projektu a nastavení virtuálního prostředí.
- Vytvoření samostatných aplikací: `users`, `nutrition`, `finance`, `pets`, `common`.
- Propojení všech modulů do hlavního `urls.py`.
- Implementace JWT autentizace a rozšíření o session autentizaci.
- Vytvoření endpointu `/api/common/changelog/` pro čtení souboru `CHANGELOG.md` jako JSON.
- Zavedení automatizačních `.bat` skriptů pro migrace a spuštění serveru.
- Zpřístupnění endpointu `/api/common/snapshot/` pro zobrazení aktuální struktury souborů v projektu.

### Průběě spolupráce:
- Spolupráce probíhala iterativně, s průbežným dokumentováním v souboru `Historie_spoluprace_1.txt`.
- Každá větší změna byla zaznamenána v `CHANGELOG.md`.
- Testování a odlačování probíhalo lokálně s využitím Django dev serveru.

---

## 3. Hlavní řešené problémy a jejich řešení

- **Neznámý příkaz `django-admin`**  
  ✓ Řešeno vytvořením a aktivací virtuálního prostředí + instalací Django pomocí pip.

- **Chybějící `urlpatterns` v modulu `finance`, `pets`**  
  ✓ Doplnění prázdných nebo základních routovacích seznamů.

- **Kruhové importy a problémy s view**  
  ✓ Rozčlenění view a optimalizace importů.

- **.bat skripty nebyly spouštěné ze správného adresáře**  
  ✓ Doplnění kontroly adresáře a automatické aktivace virtuálního prostředí ve skriptu.

- **Changelog jako JSON endpoint**  
  ✓ Implementováno jako view `changelog()` v `common/views.py`.

- **Snapshot souborové struktury**  
  ✓ Implementace funkce `generate_file_snapshot()` a API endpointu `SnapshotView`, který vrací JSON se strukturou všech souborů projektu.

---

## 4. Doporučení pro dokumentaci a rozvoj

- Pokračovat v pravidelné aktualizaci `CHANGELOG.md`, `README.md` a `Project_History.txt`.
- Zachovat modulární přístup pro každou doménu.
- Zvaž funkci automatického porovnávání snapshotů (verze A vs. B).
- Vytvořit jednoduchou frontendovou vizualizaci snapshotu (např. strom souborů).
- Integrovat CI/CD pipeline pro kontrolu kódu a generování changelogu.

---

## 5. Závěr a konečné doporučení

Tento dokument slouží jako kompletní záznam spolupráce a vývoje projektu **LifeHub**. Pomáhá udržovat kontinuitu vývoje, zajišťuje přehlednost a je cenný při onboardingu nových členů týmu.

Důraz na pravidelnou dokumentaci, modularitu a automatizaci povede k udržitelnému a škálovatelnému projektu.

