# 📝 Shrnutí spolupráce na projektu „LifeHub“ s implementací autentizace přes dj-rest-auth

---

## 📅 **Období spolupráce:**
**Duben 2025**

---

## 🚀 **Cíle projektu:**
Cílem naší spolupráce bylo úspěšně implementovat uživatelskou autentizaci a registraci do Django REST Framework aplikace **LifeHub** pomocí moderní autentizační knihovny **dj-rest-auth** a integrace s knihovnou **django-allauth**, včetně podpory autentizace pomocí JWT tokenů (Simple JWT).

---

## 🔍 **Realizované kroky a dosažené milníky:**

### 1. 🛠️ **Počáteční analýza a instalace knihoven:**
- Analyzovali jsme stávající stav projektu pomocí dodaných snapshotů.
- Detailně jsme prošli chyby, které se objevily při pokusu o spuštění migrací a serveru.
- Identifikovali jsme potřebné závislosti a verze knihoven.
- Nainstalovali jsme všechny potřebné knihovny (`dj-rest-auth`, `django-allauth`, `djangorestframework-simplejwt`, aj.) do virtuálního prostředí.

**Příklad použitých příkazů:**
```bash
python -m venv venv
venv\Scripts\activate
pip install django djangorestframework django-allauth dj-rest-auth[with_social] djangorestframework-simplejwt django-cors-headers
```

---

### 2. 🔧 **Konfigurace projektu a souboru `settings.py`:**
- Aktualizovali jsme konfiguraci podle nových standardů Django 5.2 a knihoven:
  - `INSTALLED_APPS`, `MIDDLEWARE`, autentizační backendy
  - Nastavení JWT autentizace pomocí `djangorestframework-simplejwt`
  - Aktualizace zastaralých nastavení knihovny `django-allauth`

**Finální příklad konfigurace:**
```python
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    ...
    'dj_rest_auth',
    'dj_rest_auth.registration',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    ...
]

AUTH_USER_MODEL = 'users.UserProfile'

REST_AUTH = {
    'USE_JWT': True,
    'REGISTER_SERIALIZER': 'users.serializers.CustomRegisterSerializer'
}

ACCOUNT_LOGIN_METHODS = ['email']
ACCOUNT_SIGNUP_FIELDS = ['email*', 'password1*', 'password2*']
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = 'optional'
```

---

### 3. 📂 **Kompletní vytvoření zdrojových kódů:**
- Vytvořili jsme kompletní verze všech nutných zdrojových souborů podle aktuálního snapshotu:
  - `settings.py`
  - `urls.py`
  - `users/models.py`
  - `users/views.py`
  - `users/serializers.py`

---

### 4. 🐞 **Řešení problémů s migracemi:**
- Společně jsme odstranili potíže s nekompatibilními migracemi:
  - Provedli jsme ruční smazání databáze a problematických migrací.
  - Přesně nastavili pořadí migrací, což vyřešilo konflikty mezi aplikacemi (`django-allauth` a vlastní model `UserProfile`).

**Postup řešení:**
```bash
del db.sqlite3
python manage.py makemigrations users
python manage.py migrate users
python manage.py migrate sites
python manage.py migrate
```

---

### 5. 🚨 **Řešení upozornění a varování:**
- Identifikovali jsme, že varování, která knihovna generuje (např. `USERNAME_REQUIRED` je deprecated), pocházejí interně z knihovny `dj-rest-auth`.
- Aktualizovali jsme nastavení, abychom minimalizovali dopady těchto varování a zajistili maximální kompatibilitu s budoucími verzemi.

---

### 6. ✅ **Testování funkčnosti:**
- Společně jsme ověřili funkčnost endpointů autentizace přes API pomocí příkazu `curl`.

**Testovací příkaz:**
```bash
curl -X POST http://127.0.0.1:8000/api/auth/registration/ ^
  -H "Content-Type: application/json" ^
  -d "{\"email\": \"test@priklad.cz\", \"password1\": \"SilneHeslo123\", \"password2\": \"SilneHeslo123\", \"profile_mode\": \"personal\"}"
```

---

## 🧑‍💻 **Závěry a shrnutí:**
- Projekt byl úspěšně nakonfigurován, migrován a spuštěn.
- Autentizační systém je plně funkční, včetně registrace, autentizace a práce s uživatelskými tokeny (JWT).
- Projekt je připraven k dalšímu vývoji a rozšiřování funkcionality.

---

## 📌 **Doporučení do budoucna:**
- Pravidelně aktualizovat použité knihovny, zejména sledovat vývoj `dj-rest-auth`.
- Dodržovat strukturu migrací (ruční migrace aplikace `users` jako první při změnách modelů uživatelů).
- Otestovat a implementovat další bezpečnostní doporučení pro produkční prostředí (např. nasazení přes ASGI/WSGI servery).

---

## 🤝 **Zhodnocení spolupráce:**
Naše spolupráce byla konstruktivní, detailní a efektivní. Díky tvé komunikaci a preciznímu přístupu se podařilo velmi rychle překonat počáteční technické překážky. 

**Děkuji za tvou důvěru a otevřenost při řešení všech otázek! Těším se na další společné projekty!** 🚀😊